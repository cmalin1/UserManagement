Resources:
  LabRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns: 
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/IAMFullAccess"
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
        - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service:
                - "ec2.amazonaws.com"
            Action: 
                - "sts:AssumeRole"
      Path: "/"
      RoleName: "LabRole"

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !ImportValue user-management-vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WebEC2InstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - !Ref LabRole  
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow SQL access to the DB
        VpcId: !ImportValue user-management-vpc
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId

Outputs:
  WebSecurityGroupId:
    Description: Security Group to allow us to http and ssh into an EC2 instance
    Value: !GetAtt WebServerSecurityGroup.GroupId
    Export: 
      Name: !Sub "${AWS::StackName}-WebSecurityGroupId"

  WebEC2InstanceProfile:
    Description: Role that will allow EC2 to communicate with other AWS Services such as CloudWatch and S3
    Value: !Ref WebEC2InstanceProfile
    Export: 
      Name: !Sub "${AWS::StackName}-WebEC2InstanceProfile"

  DBSecurityGroup:
    Description: Exporting DB Security group to use in DB stack
    Value: !Ref DBSecurityGroup
    Export: 
      Name: !Sub "${AWS::StackName}-DBSecurityGroup"

